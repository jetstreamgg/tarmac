// No imports needed - just exporting pre-generated addresses

// Pre-generated test wallet addresses (100 total)
// First 10 are the original addresses for backward compatibility
// Remaining 90 are deterministically generated
export const TEST_WALLET_ADDRESSES: readonly `0x${string}`[] = [
  // Original addresses (indices 0-9)
  '0xa80277a17c710518891519413de6cc48a5486bb8',
  '0x0944AB0c507A12052A5D766e43bf3a541e45A7Fc',
  '0xb4b115a488fe318d6ecc640bdcf5c2a174c8360a',
  '0xa877a5bb7f56b6ab41810d31e57213955778d3c8',
  '0x83553ca3cbd6a54df133f50bef96b922036e16e1',
  '0xeb20ac98e46b17a2dc2ca1bcc4b8b817a7799c75',
  '0x9ca96a17dc8f9c5c6d8761a452f7974869f8c286',
  '0x30b9f54ba699e3a10c9a733326f73422ba0ed5de',
  '0x96e5ada0e74382196f5b57bc4f012cdcae8949fe',
  '0xbf58ed406fbee2b9c966c47a7da78ff6a291dcc6',
  '0xd42aa67d4a0a7c1b3d390ea899e7b6b9e3715bf1',
  // Generated addresses (indices 10-99)
  '0xad45171bb82322af7A43c34F8C68e9755c1D5937',
  '0xA1C38549D834d313b746C53303232F9c39bd88D7',
  '0x85D584F87A9Dac28163FB4CBF8562536810B029D',
  '0xF9CF6EF8345665c084024522b041F00a52B9d790',
  '0x8D7bbfD2142F63E8Fca2e050aC317aB0F03D9aa4',
  '0xE08c458d03cF42B46D54F869ca357C2Be24f7160',
  '0xe550903f3a035C9b4f4537A0ccB829F9e132cb1f',
  '0x138598685624F976ccB18Ab7D8FF77fE2a315E8b',
  '0x4dfb2fC44f9f2cc9F5480EF1b50060908CD6F604',
  '0xf048B8b5aeAb596C1A0968033a42A86627000Cbe',
  '0x62d60bdCf455a494aa61059CeDc5676334bef089',
  '0x8A916a1D1c2Fd0c6A61a59e4964c52465EbFC85f',
  '0x9c86bd53529404ABdbfce891164bAA94D4955FC8',
  '0x238ad86D28064b8ca123606DdD30Ddd2E1013311',
  '0x25b9a655d763D0F61e1b5993cb6C0E1E0A81fa7C',
  '0x96A8623eC2cAf82c990388DB940B8cf21Ef6Adc7',
  '0x5c44d34FFa35cA73C7ab3459B23e390eC532aF4c',
  '0x640D13df4c58A61DCe780E57f27736131F4eEf6f',
  '0xbFB5804bAaE3d323b249374161868cef70C9db43',
  '0x2c6A74BdE4998c526f35ABe3A955A2d8f290b202',
  '0x624bB93B9B82dFf0Fe5Eefb1a1622438B1702eB8',
  '0xDe790fdb70bE6e29344F6c4b3C06Eb46C81564AF',
  '0x4C299D8Fdb1329EF8817D7C95b542969148a15a2',
  '0x6137388B02556B6D8561329fe10D49F84C6E5547',
  '0x40d6Bc05Ba0B4aA8d581F5d97dAf9E183fc1caE6',
  '0x320f48566954a27B13B305017a4a091b43E56cC5',
  '0x58916E25ac38EF2Ee26f71464503AecDaB2dA272',
  '0x826f8ec5F35f25FB9921A29c0e9360abdFc60C71',
  '0xe4Df99EadA9c41c6ba8ff3f67775Fd44A45A5e49',
  '0xBeF9edb1Ea6Ce1ef533bC74a28f465b5919ca782',
  '0xe18c9095DbcB3c74Db239a4D62872D2800fD47B7',
  '0x0DC885fa223130D8883a37432381aB0398A272cd',
  // '0xA80277A17C710518891519413DE6Cc48a5486Bb8',
  '0xd201047497849380048c9cE4076106d74b1Ea6d2',
  '0x9b49BA9384c1b5921CF4BDDFfdF1FA3c909A4b4D',
  '0xc82BE010858ce0D22d06417c7cA0A7d14353a249',
  '0xC6Cb436d3c98f6786847e93fA4f7421b085b5f6c',
  '0x8A1964dB6286e66E9CcF90eaFB114f5A19fFf0DE',
  '0xD57Fa32944d4470f73c6e68b27bfD6af168C42AE',
  '0x80BA18FA35269ADa03A777ef8fDAE61e19a7c8eE',
  '0x3cBA47012F1C24F1C8bCaD5167Cca9B1fB3d7167',
  '0x81D151F24966864a7e686BA58f3E4E91129191B2',
  '0x648c95e45bA9bb43f641236b206768D5E6f05607',
  '0x5C9c702542fc89C8E5eb61cFb5F56fB42e4A84C9',
  '0xeD169f33f7f1D422734aa53B45972eDc4D2fd456',
  '0xd13d3688ceb639719DE68557D4F847Ecfb6f0938',
  '0x4351E0C68A3231f680B1dF8Dd36d7caaABa9c2c1',
  '0x41BBF345173E066F574229eF615698489DB858b2',
  '0xcD2180f86028d84921b191e9Ee32d7302a89AE1A',
  '0x130844c1C798900cd06d3dfACac82A0faA2D5357',
  '0x1Bf59614C92633e1D67Ca420215cf076fCf203c9',
  '0x8dA6ad7a5eBBdA55895866D7b28b98018b043A8e',
  '0xE6EFE6c94c3D0E5812170272Bc24F5fD3077816E',
  '0xE7838A635fA6BBd55f57cE39D98Ba5A3ab3F9462',
  '0x55198045eCF7E6B6095fc21d2f999B091B2Dc2e3',
  '0x50F6d65917667d4D7922195Dfd7c8e740e864573',
  '0xB0D12453E3d308a577550Caccf46A3b63681d62f',
  '0x37054D270Fb906FF0C3D4dC7e4818a2fe0675882',
  '0xEA8F32d82a4Ea5D5f9f54c99c90ae736Aeb2bb83',
  '0xDAF84Ac14F964Bc5E32AE0205577b02753A7bB18',
  '0xF718f3DE2081428c3E935D26A0a3c7c9F5a01e54',
  '0xf509f20Ab205CC0360e424D0dE9906Fbe3112119',
  '0x85e6A87F5f3cdA7bb2302147Ae9b34e8aa879897',
  '0xED6E4Bdb88d5E339686906d2C0ECA50DDdE48967',
  '0xD942B96B39D10C7bcf6b3861Ed4b8C67fA0462b9',
  '0x82c943E1aef56FFc1FBA14Af52AA0899A7C3E676',
  '0x9daE490E70b40240Fd9BF724d3E38d188f63F0e1',
  '0xDE8A140BA76D5b906d6701e74D05c5Ea91Cc5504',
  '0x05C041aCCfD699A8b61608D89a4539092cc2C2f2',
  '0xF46b8A179909D5c08c47c687D4cB4eCF3D821E64',
  '0x605Bb3691Fb439bdF1B3218B5BE51a9dA1Ab53fC',
  '0x5B80D60564F229edc99794261a2bA3cfA0704386',
  '0x41Aa8B2c8A70f45C31a29DCCd792F097C1417400',
  '0x5CF3873Ba8E22b7CeF1dA74d5976A211F031f778',
  '0x01D45AD5CC7f3AF8FFc364cF29525CC05A598131',
  '0xaC4bbA50c80e2eE99b38e2Bf441c6095F26979EC',
  '0x86d562B1207386abAEd3997e294e7c4162e49877',
  '0x25C65101FC837cc0cFEd8802A8f6b8bE0324077a',
  '0xeACc96a6A7fC05B9B301C0153785d8550a25B957',
  '0xB577EEFC07428B267bC68E1dFa6AF50C27473399',
  '0x7C3f23403081C8D3c21Edaa6F4DB125720d6C419',
  '0x0f5c9b3Fa2fBebAbD13F7c2fC2004E47CD591b4b',
  '0x71F681dE2B6E3cbF85a093338C4C43b34E1a5B9A',
  '0x9A9BFEad434315D14C3d5607F81B1588e2A084a2',
  '0xf8c7678a816089149b51A3841D99E9cbF690013B',
  '0x43b5033AA6693F717DE5eB446Ad91722EBF7EF86',
  '0xE57439E517AA97ad4098Ab8fCCD450120dA683aa',
  '0x515154AC119e17D77d46aC338D9f11B843e0BC59',
  '0x75Ca2F6B5ba9BB93Da86096126f91951Ad1D6587',
  '0x3caB18dC5232c4cCBBC0c5f957Ad599374ce6B65'
] as const;

// Export the count for use in the account pool manager
export const TEST_WALLET_COUNT = 100; // Total number of test wallets in our pool - large enough to avoid sharing

/**
 * Get a test wallet address by index from the pre-generated pool
 */
export const getTestWalletAddress = (addressIndex: number): `0x${string}` => {
  // Simple array lookup from our pool of 100 pre-generated addresses
  if (addressIndex < 0 || addressIndex >= TEST_WALLET_ADDRESSES.length) {
    throw new Error(`Address index ${addressIndex} out of range (0-${TEST_WALLET_ADDRESSES.length - 1})`);
  }
  return TEST_WALLET_ADDRESSES[addressIndex];
};

/**
 * Get multiple test addresses from the pre-generated pool
 */
export function getTestAddresses(count: number): `0x${string}`[] {
  if (count > TEST_WALLET_ADDRESSES.length) {
    throw new Error(`Requested ${count} addresses but only ${TEST_WALLET_ADDRESSES.length} available`);
  }
  // Return the first 'count' addresses from the pool
  return TEST_WALLET_ADDRESSES.slice(0, count);
}
