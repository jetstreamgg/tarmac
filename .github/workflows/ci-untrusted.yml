name: CI - Untrusted (Dependabot Safe)

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-untrusted-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Build
        run: pnpm build:packages
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Cache node_modules and dist
        uses: actions/cache/save@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}

  lint:
    name: Lint and Type Check
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Restore build
        uses: actions/cache/restore@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Lint and Type Check
        run: |
          pnpm lint
          pnpm typecheck

  # Unit tests that don't require secrets
  test-unit:
    name: Unit Tests (No Secrets)
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Restore Build
        uses: actions/cache/restore@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Test utils package (no secrets needed)
        run: pnpm test:utils

  # Create an artifact that signals tests passed
  create-test-signal:
    name: Create Test Signal
    needs: [lint, test-unit]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Create signal file
        run: |
          echo "untrusted-tests-passed" > test-signal.txt
          echo "sha=${{ github.event.pull_request.head.sha || github.sha }}" >> test-signal.txt
          echo "run_id=${{ github.run_id }}" >> test-signal.txt
      - name: Upload signal artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-signal-${{ github.run_id }}
          path: test-signal.txt
          retention-days: 1