name: CI Status Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  statuses: read
  checks: read

jobs:
  # This job provides a required check that waits for all CI to complete
  wait-for-ci:
    name: Wait for CI
    runs-on: ubuntu-latest
    steps:
      - name: Wait for all CI checks
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const sha = context.payload.pull_request.head.sha;
            
            // Wait up to 30 minutes
            const maxWaitTime = 30 * 60 * 1000;
            const checkInterval = 30 * 1000;
            const startTime = Date.now();
            
            console.log(`Waiting for CI checks on SHA: ${sha}`);
            
            while (Date.now() - startTime < maxWaitTime) {
              const { data: statuses } = await github.rest.repos.getCombinedStatusForRef({
                owner,
                repo,
                ref: sha
              });
              
              // Look for our final CI status
              const finalStatus = statuses.statuses.find(status => 
                status.context === 'CI / All Checks'
              );
              
              if (finalStatus) {
                console.log(`Final CI status: ${finalStatus.state}`);
                if (finalStatus.state === 'failure') {
                  core.setFailed('CI checks failed');
                  return;
                } else if (finalStatus.state === 'success') {
                  console.log('All CI checks passed!');
                  return;
                }
              }
              
              console.log('Waiting for CI to complete...');
              await new Promise(resolve => setTimeout(resolve, checkInterval));
            }
            
            core.setFailed('Timeout waiting for CI checks to complete');