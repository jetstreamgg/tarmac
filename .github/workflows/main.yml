name: Packages

on:
  pull_request_target:  # This gives access to secrets for Dependabot
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Security validation for Dependabot PRs
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - uses: actions/checkout@v4
        with:
          # Checkout the PR branch to scan the actual changes
          ref: ${{ github.head_ref }}
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run Security Validator
        run: node scripts/security-validator.js

  install:
    name: Install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Build
        run: pnpm build:packages
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
      - name: Cache node_modules and dist
        uses: actions/cache/save@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Restore build
        uses: actions/cache/restore@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Lint and Type Check
        run: |
          pnpm lint
          pnpm typecheck

  test:
    name: Test
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
        react-version: [18]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      - name: Restore Build
        uses: actions/cache/restore@v4
        with:
          path: |
            packages/**/dist
          key: build-${{ github.run_id }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      # Now we can run full tests for Dependabot PRs with security measures in place
      - name: Fork Tenderly virtual testnet
        run: pnpm vnet:fork:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}

      - name: Test packages
        run: pnpm test:coverage:ci
        env:
          REACT_VERSION: ${{ matrix.react-version }}

      - name: Delete Tenderly virtual testnet fork
        if: always()
        run: pnpm vnet:delete:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}