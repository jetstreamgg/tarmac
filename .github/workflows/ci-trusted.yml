name: CI - Trusted (With Secrets)

on:
  workflow_run:
    workflows: ["CI - Untrusted (Dependabot Safe)"]
    types:
      - completed

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  # Verify the untrusted workflow succeeded
  verify-untrusted:
    name: Verify Untrusted Tests
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
      pr-number: ${{ steps.check.outputs.pr-number }}
      sha: ${{ steps.check.outputs.sha }}
    steps:
      - name: Check if untrusted tests passed
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            // Only proceed if the workflow run was successful
            if (context.payload.workflow_run.conclusion !== 'success') {
              console.log('Untrusted workflow did not succeed, skipping trusted tests');
              core.setOutput('should-run', 'false');
              return;
            }

            // Get PR information from the workflow run
            const pr = context.payload.workflow_run.pull_requests[0];
            if (!pr) {
              console.log('No PR associated with this workflow run');
              core.setOutput('should-run', 'false');
              return;
            }

            core.setOutput('should-run', 'true');
            core.setOutput('pr-number', pr.number);
            core.setOutput('sha', context.payload.workflow_run.head_sha);

  # Run tests that require secrets
  test-with-secrets:
    name: Test with Tenderly
    needs: verify-untrusted
    if: needs.verify-untrusted.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        pnpm-version: [9.9.0]
        react-version: [18]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.verify-untrusted.outputs.sha }}
          submodules: true
      
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      
      - name: Install Dependencies
        run: pnpm i --frozen-lockfile
      
      - name: Build packages
        run: pnpm build:packages
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Fork Tenderly virtual testnet
        run: pnpm vnet:fork:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}

      - name: Test packages with Tenderly
        run: pnpm test:coverage:ci
        env:
          REACT_VERSION: ${{ matrix.react-version }}

      - name: Delete Tenderly virtual testnet fork
        run: pnpm vnet:delete:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}
        if: always()

      - name: Update PR status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ needs.verify-untrusted.outputs.pr-number }};
            const sha = '${{ needs.verify-untrusted.outputs.sha }}';
            const status = '${{ job.status }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: status === 'success' ? 'success' : 'failure',
              context: 'Trusted Tests / Tenderly Tests',
              description: status === 'success' ? 'All tests passed' : 'Tests failed'
            });

  # Run E2E tests
  e2e-tests:
    name: E2E Tests
    needs: verify-untrusted
    if: needs.verify-untrusted.outputs.should-run == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - test: reward-1.spec
            vnet: true
            chain: mainnet
          - test: reward-2.spec
            vnet: true
            chain: mainnet,arbitrum,base,optimism,unichain
          - test: upgrade.spec
            vnet: true
            chain: mainnet
          - test: mainnet-savings.spec
            vnet: true
            chain: mainnet
          - test: seal.spec
            vnet: true
            chain: mainnet
          - test: stake.spec
            vnet: true
            chain: mainnet
          - test: landing.spec
            vnet: true
            chain: mainnet
          - test: la-u-r.spec
            vnet: true
            chain: mainnet
          - test: la-u-s.spec
            vnet: true
            chain: mainnet
          - test: base-savings.spec
            vnet: true
            chain: base
          - test: base-trade.spec
            vnet: true
            chain: base
          - test: arbitrum-savings.spec
            vnet: true
            chain: arbitrum
          - test: arbitrum-trade.spec
            vnet: true
            chain: arbitrum
          - test: optimism-savings.spec
            vnet: true
            chain: optimism
          - test: optimism-trade.spec
            vnet: true
            chain: optimism
          - test: unichain-savings.spec
            vnet: true
            chain: unichain
          - test: unichain-trade.spec
            vnet: true
            chain: unichain
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.verify-untrusted.outputs.sha }}
      
      - uses: pnpm/action-setup@v4
        with:
          version: 9.9.0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build:packages
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - run: pnpm -F webapp exec playwright install --with-deps chromium

      - name: Setup VNet (if required)
        if: ${{ matrix.vnet }}
        run: |
          pnpm run vnet:fork:ci ${{ matrix.chain }}
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}

      - name: Run E2E Test
        run: pnpm run e2e:no-vnet ${{ matrix.test }}
        env:
          TEST_CHAIN: ${{ matrix.chain }}
          VITE_ENV_NAME: development
          VITE_TERMS_LINK: '[{"url":"https://legal-terms","name":"Terms of Use"}]'
          VITE_BATCH_TX_ENABLED: 'true'

      - name: Teardown VNet (if required)
        if: ${{always() && matrix.vnet}}
        run: |
          pnpm run vnet:delete:ci
        env:
          TENDERLY_API_KEY: ${{ secrets.TENDERLY_API_KEY }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.test }}-trusted
          path: apps/webapp/playwright-report/
          retention-days: 30

      - name: Update PR status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ needs.verify-untrusted.outputs.pr-number }};
            const sha = '${{ needs.verify-untrusted.outputs.sha }}';
            const status = '${{ job.status }}';
            const test = '${{ matrix.test }}';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: status === 'success' ? 'success' : 'failure',
              context: `Trusted Tests / E2E / ${test}`,
              description: status === 'success' ? 'Test passed' : 'Test failed'
            });